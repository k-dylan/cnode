<style lang="less">
.container {
  height: 100%;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
}
</style>

<script>
import wepy from 'wepy'
import utils from './utils.js'
import request from './request.js'
import 'wepy-async-function'

export default class extends wepy.app {
  config = {
    pages: [
      'pages/index',
      'pages/topic',
      'pages/my',
      'pages/my-topic',
      'pages/my-replies'
    ],
    window: {
      backgroundTextStyle: 'light',
      navigationBarBackgroundColor: '#fff',
      navigationBarTitleText: 'Cnode',
      navigationBarTextStyle: 'black'
    },
    tabBar: {
      color: '#444',
      selectedColor: '#80bd01',
      list: [{
        pagePath: 'pages/index',
        iconPath: 'static/icon/home.png',
        selectedIconPath: 'static/icon/home-active.png',
        text: '首页'
      }, {
        pagePath: 'pages/my',
        iconPath: 'static/icon/my.png',
        selectedIconPath: 'static/icon/my-active.png',
        text: '我的'
      }]
    }
  }

  constructor () {
    super()
    // 使用wepy.xxx的方式将小程序原生api都Promise化
    this.use('promisify')
  }

  // 定义拦截器，为api请求添加前缀网址
  $interceptors = {
    'request': {
      config (p) {
        let obj = typeof p === 'object' ? p : { url: p }
        obj.url = 'https://cnodejs.org/api/v1/' + obj.url
        return obj
      }
    }
  }

  data = {
    isLogined: false
  }

  globalData = {
    userInfo: null,
    token: null
  }

  login (token) {
    return request.login(token)
      .then(res => {
        console.log(res.loginname + '登录成功！')
        this.globalData.userInfo = res
        this.loginedCallback && this.loginedCallback(res)
      })
  }

  onLaunch () {
    // 读取用户保存的token
    utils.getStorage('token').then(res => {
      this.globalData.token = res.data
      this.login(res.data)
    })
  }
}
</script>
