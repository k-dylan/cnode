<style lang="less">
  .navbar {
    display: flex;
    width: 100%;
    font-size: 30rpx;
    border-bottom: 1px solid #ccc;
    height: 45px;
    line-height: 45px;
    background-color: #444;
    color: #ccc;
    &-item {
      flex-grow: 1;
      text-align: center;
      &.on {
        color: #fff;
        border-bottom: 2px solid #fff;
      }
    }
  }
</style>
<template>
  <view class="container">
    <view class="navbar">
      <repeat for="{{tabs}}" key="key" index="key" item="value">
        <text @tap="switchTab({{key}})" class="navbar-item {{currentTab === key ? 'on' : ''}}">{{value}}</text>
      </repeat>
    </view>
    <view class="list">
      <repeat for="{{list}}" key="item.id" index="index" item="item">
        <topicItem :item="item"></topicItem>
      </repeat>
    </view>
  </view>
</template>

<script>
  import wepy from 'wepy'
  import utils from '../utils.js'
  import commonMixin from '../mixins/common.js'
  import topicItem from '../components/topic-item'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '首页',
      enablePullDownRefresh: true,
      onReachBottomDistance: 100
    }
    components = { topicItem }
    mixins = [commonMixin]

    data = {
      list: [],
      currentTab: 'all',
      page: 1
    }

    methods = {
      switchTab (tab) {
        this.currentTab = tab
        this.loadData(tab)
      }
    }
    // 读取数据
    loadData (tab, page = 1) {
      utils.showLoading()
      return wepy.request(`topics?tab=${tab}&limit=20&page=${page}&mdrender=false`).then(({data}) => {
        this.list = page === 1 ? data.data : this.list.concat(data.data)
        utils.hideLoading()
        this.page = page
        this.$apply()
      })
    }

    onLoad (options) {
      this.currentTab = options.tab || 'all'
      this.loadData(this.currentTab)
    }

    // 下拉刷新
    onPullDownRefresh () {
      this.loadData(this.currentTab).then(() => {
        wepy.stopPullDownRefresh()
      })
    }
    // 上拉加载
    onReachBottom () {
      this.page ++
      this.loadData(this.currentTab, this.page)
    }
  }
</script>
